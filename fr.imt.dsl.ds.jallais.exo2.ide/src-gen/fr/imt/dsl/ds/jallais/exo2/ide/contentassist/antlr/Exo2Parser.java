/*
 * generated by Xtext 2.28.0
 */
package fr.imt.dsl.ds.jallais.exo2.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.imt.dsl.ds.jallais.exo2.ide.contentassist.antlr.internal.InternalExo2Parser;
import fr.imt.dsl.ds.jallais.exo2.services.Exo2GrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class Exo2Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(Exo2GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, Exo2GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getGuiComponentAccess().getAlternatives(), "rule__GuiComponent__Alternatives");
			builder.put(grammarAccess.getFrameAccess().getGroup(), "rule__Frame__Group__0");
			builder.put(grammarAccess.getSectionAccess().getGroup(), "rule__Section__Group__0");
			builder.put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
			builder.put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
			builder.put(grammarAccess.getButtonAccess().getGroup_2(), "rule__Button__Group_2__0");
			builder.put(grammarAccess.getGUIAccess().getFramesAssignment(), "rule__GUI__FramesAssignment");
			builder.put(grammarAccess.getFrameAccess().getNameAssignment_1(), "rule__Frame__NameAssignment_1");
			builder.put(grammarAccess.getFrameAccess().getTitleAssignment_4(), "rule__Frame__TitleAssignment_4");
			builder.put(grammarAccess.getFrameAccess().getWidthAssignment_6(), "rule__Frame__WidthAssignment_6");
			builder.put(grammarAccess.getFrameAccess().getLenghtAssignment_8(), "rule__Frame__LenghtAssignment_8");
			builder.put(grammarAccess.getFrameAccess().getSectionsAssignment_9(), "rule__Frame__SectionsAssignment_9");
			builder.put(grammarAccess.getSectionAccess().getNameAssignment_1(), "rule__Section__NameAssignment_1");
			builder.put(grammarAccess.getSectionAccess().getElementsAssignment_3(), "rule__Section__ElementsAssignment_3");
			builder.put(grammarAccess.getLabelAccess().getTextAssignment_1(), "rule__Label__TextAssignment_1");
			builder.put(grammarAccess.getButtonAccess().getTextAssignment_1(), "rule__Button__TextAssignment_1");
			builder.put(grammarAccess.getButtonAccess().getRedirectToAssignment_2_1(), "rule__Button__RedirectToAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private Exo2GrammarAccess grammarAccess;

	@Override
	protected InternalExo2Parser createParser() {
		InternalExo2Parser result = new InternalExo2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public Exo2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Exo2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
